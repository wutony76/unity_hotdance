const NatCorderWebGL={sharedInstance:{framebuffer:null,framebufferContext:null,pixelBuffer:null,audioContext:null,audioBuffer:null,audioStream:null,recorder:null,isRecording:!1,verbose:!1,MIME_TYPE:"video/webm"},NCInitialize:function(e,n,a){},NCStartRecording:function(e,n,a,r,t,s,o,d,c){_sharedInstance.verbose&&console.log("NatCorder Logging: Start recording invoked with resolution",e+"x"+n),_sharedInstance.framebuffer=document.createElement("canvas"),_sharedInstance.framebuffer.width=e,_sharedInstance.framebuffer.height=n,_sharedInstance.framebufferContext=_sharedInstance.framebuffer.getContext("2d"),_sharedInstance.pixelBuffer=_sharedInstance.framebufferContext.getImageData(0,0,e,n);const f=[_sharedInstance.framebuffer.captureStream(a).getVideoTracks()[0]];s&&(_sharedInstance.audioContext=new AudioContext({latencyHint:"interactive",sampleRate:o}),_sharedInstance.audioBuffer=_sharedInstance.audioContext.createBuffer(c,d,o),_sharedInstance.audioStream=_sharedInstance.audioContext.createMediaStreamDestination({channelCount:c,channelCountMode:"explicit"}),f.push(_sharedInstance.audioStream.stream.getAudioTracks()[0]));const i={mimeType:_sharedInstance.MIME_TYPE,videoBitsPerSecond:r};_sharedInstance.recorder=new MediaRecorder(new MediaStream(f),i),_sharedInstance.recorder.start(),_sharedInstance.isRecording=!0},NCStopRecording:function(){_sharedInstance.verbose&&console.log("NatCorder Logging: Stop recording invoked");const e=new Int32Array(HEAPU8.buffer,_malloc(Int32Array.BYTES_PER_ELEMENT),1);return e[0]=0,_sharedInstance.recorder.ondataavailable=function(n){const a=new Blob([n.data],{type:_sharedInstance.MIME_TYPE}),r=URL.createObjectURL(a);_sharedInstance.verbose&&console.log("NatCorder Logging: Completed recording video",a,"to URL:",r);const t=lengthBytesUTF8(r)+1,s=_malloc(t);stringToUTF8(r,s,t),e[0]=s},_sharedInstance.recorder.stop(),_sharedInstance.audioContext&&_sharedInstance.audioContext.close(),_sharedInstance.isRecording=!1,_sharedInstance.recorder=null,_sharedInstance.framebuffer=null,_sharedInstance.framebufferContext=null,_sharedInstance.pixelBuffer=null,_sharedInstance.audioContext=null,e.byteOffset},NCIsRecording:function(){return _sharedInstance.isRecording},NCEncodeFrame:function(e,n){_sharedInstance.pixelBuffer.data.set(new Uint8ClampedArray(HEAPU8.buffer,e,_sharedInstance.pixelBuffer.width*_sharedInstance.pixelBuffer.height*4)),_sharedInstance.framebufferContext.putImageData(_sharedInstance.pixelBuffer,0,0)},NCEncodeSamples:function(e,n){e=new Float32Array(HEAPU8.buffer,e,_sharedInstance.audioBuffer.numberOfChannels*_sharedInstance.audioBuffer.length);for(var a=0;a<_sharedInstance.audioBuffer.numberOfChannels;a++){const n=_sharedInstance.audioBuffer.getChannelData(a);for(var r=0;r<_sharedInstance.audioBuffer.length;r++)n[r]=e[r*_sharedInstance.audioBuffer.numberOfChannels+a]}var t=_sharedInstance.audioContext.createBufferSource();t.buffer=_sharedInstance.audioBuffer,t.connect(_sharedInstance.audioStream),t.start()},NCSetVerboseMode:function(e){_sharedInstance.verbose=!!e},NCSaveToCameraRoll:function(e){var n=document.createElement("a");document.body.appendChild(n),n.style="display: none",n.href=e,n.download="recording_"+(new Date).getTime()+".webm",n.click()},NCStartRecording__deps:["sharedInstance"],NCStopRecording__deps:["NCSaveToCameraRoll"]};mergeInto(LibraryManager.library,NatCorderWebGL);